(use-modules (ice-9 rdelim))
(define input (open-input-file (list-ref (command-line) 1)))
(let loop ((line (read-line input)))
  (cond ((not (eof-object? line))
    (let ((s (string-split line #\ )))
      (let* ((x1 (string->number (list-ref s 0)))
             (y1 (string->number (list-ref s 1)))
             (x2 (string->number (list-ref s 2)))
             (y2 (string->number (list-ref s 3))))
        (display (if (= x1 x2)
                   (if (= y1 y2)
                     "here"
                     (if (< y1 y2) "N" "S"))
                   (if (= y1 y2)
                     (if (< x1 x2) "E" "W")
                     (if (< x1 x2)
                       (if (< y1 y2) "NE" "SE")
                       (if (< y1 y2) "NW" "SW")))))))
    (newline)
    (loop (read-line input)))))
(close input)
