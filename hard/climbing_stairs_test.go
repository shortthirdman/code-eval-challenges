package main

import (
	"fmt"
	"math/big"
	"testing"
)

func TestClimbingStairs(t *testing.T) {
	for k, v := range map[uint]string{
		1:    "1",
		2:    "2",
		3:    "3",
		4:    "5",
		50:   "20365011074",
		60:   "2504730781961",
		70:   "308061521170129",
		80:   "37889062373143906",
		90:   "4660046610375530309",
		100:  "573147844013817084101",
		200:  "453973694165307953197296969697410619233826",
		300:  "359579325206583560961765665172189099052367214309267232255589801",
		400:  "284812298108489611757988937681460995615380088782304890986477195645969271404032323901",
		500:  "225591516161936330872512695036072072046011324913758190588638866418474627738686883405015987052796968498626",
		600:  "178684461669052552311410692812805706249615844217278044703496837914086683543763273909969771627106004287604844670397177991379601",
		700:  "141530751622060734789349637541611806906560581814825656065057782655897254318057662142341135314844769422903905867863877139246681886097354486547763701",
		800:  "112102381301657019753922131204008107032943249802439891737991109609642417687024271467241971909001000928433174016012202680530522970872221529003044406006693244742562963426",
		900:  "88793027306605937532517516910637647045239090036365766884466525589158360259770006891772711976920559280382807770394537471560061517120086971996377683290300054868066659454250625417891167369401",
		1000: "70330367711422815821835254877183549770181269836358732742604905087154537118196933579742249494562611733487750449241765991088186363265450223647106012053374121273867339111198139373125598767690091902245245323403501"} {
		if r := climbingStairs(k); r != v {
			t.Errorf("failed: climbingStairs %d is %s, got %s",
				k, v, r)
		}
	}
}

func BenchmarkClimbingStairs(b *testing.B) {
	for i := 0; i < b.N; i++ {
		climbingStairs(uint(i%999 + 1))
	}
}

func climbingStairs(a uint) string {
	if a < 4 {
		return fmt.Sprint(a)
	}
	r := big.NewInt(1)
	q := big.NewInt(0)
	for p := big.NewInt(1); a > 1; a-- {
		q.Set(r)
		r.Add(r, p)
		p.Set(q)
	}
	return fmt.Sprint(r)
}
